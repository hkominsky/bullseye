OVERVIEW

Bullseye is a full-stack application built with a FastAPI (Python) backend and a React (TypeScript) frontend.

The program aggregates company financials, calculates key ratios, compiles recent news articles, analyzes corporate and retail sentiment, evaluates sector performance, and generates annual stock performance charts.

Reports are formatted and sent as emails using SendGrid, with all data stored in a PostgreSQL database. A FastAPI backend and React frontend provide user authentication, mailing list management, and customizable ticker updates.

Users are able to create an account and manage the stocks they want the analysis for, as well as mass or individually sending themselves the overview emails.

TECH STACK

Frontend:
- React 19 with TypeScript
- React Router DOM for navigation
- Framer Motion for animations
- React Testing Library for testing

Backend:
- Python 3.x
- FastAPI for API development
- SQLAlchemy for ORM
- Alembic for database migrations
- PostgreSQL database

Key Libraries:
- pandas, numpy for data processing
- plotly for visualizations
- tweepy for Twitter integration
- yfinance for financial data
- selenium for web scraping
- sendgrid for email services

GETTING STARTED

Prerequisites:
- Python 3.8 or higher
- Node.js 14 or higher
- PostgreSQL database
- npm package manager

Installation:

1. Clone the repository
   git clone https://github.com/hkominsky/bullseye.git
   cd bullseye

2. Backend Setup
   pip install -r requirements.txt
   cp .env.example .env
   (Edit .env with your configuration)

3. Frontend Setup
   cd src/view/web
   npm install

4. Database Setup
   alembic upgrade head

RUNNING THE APPLICATION

Backend (FastAPI):
   cd src/view/api
   uvicorn main:app --reload
   
   API available at: http://localhost:8000

Frontend (React):
   cd src/view/web
   npm start
   
   App available at: http://localhost:3000

Manual Controller:
   python -m src.controller.manual


FEATURES

- User authentication with JWT
- Real-time data updates
- Interactive data visualizations with Plotly
- Social media integration (Twitter)
- Financial data analysis (Yahoo Finance)
- Email notifications via SendGrid
- Responsive UI with smooth animations
- Automated stock analysis reports
- Sentiment analysis of corporate and retail sentiment
- Sector performance evaluation

DEVELOPMENT

Run Tests:
   Frontend tests:
      cd src/view/web
      npm start
   
   Backend tests:
      cd src/tests
      pytest

CONTACT

For questions or feedback, contact:
hugh.kominsky@gmail.com